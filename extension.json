{
    "id": "ibm.devops.services.pipeline.devops.ad_finish",
    "version": 1,
    "name_key": "ExtName",
    "desc_key": "ExtDesc",
    "extension_type": "Deploy",
    "message_key": "ExtMessage",
    "inputs": [
        {
            "type": "Bluemix",
            "inclusion" : "always",
            "regions": ["ibm:ys1:us-south", "ibm:yp:us-south", "ibm:ys1:eu-gb", "ibm:yp:eu-gb"]
        }
    ],
    "params": [
        {
            "name": "COMMAND",
            "type": "TextArea",
            "required": "true",
            "default_value": "#!/bin/bash
#
# The following code uses the Active Deploy service to update your new application with zero downtime.
# The code used is available at https://github.com/Osthanes/update_service
# and https://github.com/Osthanes/activedeploy_common.
#
# For details about how to set up the Active Deploy extension for the Delivery Pipeline, see
# https://console.ng.bluemix.net/docs/services/ActiveDeploy/updatingapps.html#adpipeline.
#
# Feel free to fork the code. After creating your fork, define the environment variable GIT_HOME to use the forked repositories with the
# format https://github.com/${GIT_HOME}/update_service and https://github.com/${GIT_HOME}/activedeploy_common.
#

source ${EXT_DIR}/git_util.sh
git_retry clone https://github.com/Osthanes/update_service.git activedeploy
activedeploy/activedeploy_step_2.sh",
            "label_key": "COMMAND_KEY",
            "desc_key": "COMMAND_DESC"
        }
    ],
    "outputs": [
        {
            "type": "Artifacts",
            "inclusion" : "always"
        }
    ],
    "execution": {
        "type": "JenkinsDocker",
        "shell": "#!/bin/bash

set +e
[[ ${DEBUG_EXTENSION} -eq 1 ]] && set -x
export INIT_START_TIME=$(date +\"%s\")
[[ -z \"${GIT_HOME}\" && \"${IDS_URL}\" == *\"stage1\"*  && \"${IDS_URL}\" != *\"integration\"* ]] && GIT_HOME=\"IBMActiveDeploy-Toolchain\"
GIT_HOME=${GIT_HOME:-\"Osthanes\"}
export GIT_HOME
# OSSC line
dpkg -l | grep '^ii' > $EXT_DIR/pkglist
. $EXT_DIR/_init.sh
# OSSC line
dpkg -l | grep '^ii' > $EXT_DIR/pkglist2
if [[ $DEBUG -eq 1 ]]; then
  diff $EXT_DIR/pkglist $EXT_DIR/pkglist2 || true
fi
INIT_END_TIME=$(date +\"%s\")
INIT_EST_TIME=$(($INIT_END_TIME-$INIT_START_TIME))
echo -e \"Init runtime of `date -u -d @\"$INIT_EST_TIME\" +\'%-Mm %-Ss\'`\"
# place command into a temp script file
cat > script.sh << '__EOF__'
#!/bin/bash
function save_env_vars_on_exit() {
    echo \"#!/bin/bash\" > $EXT_DIR/save_vars.sh
    export -p >> $EXT_DIR/save_vars.sh
}
trap \"save_env_vars_on_exit\" EXIT
#COMMAND#
__EOF__
# call the script in a subscript
/bin/bash -e script.sh
PIPE_SCR_RESULT=$?
# restore the saved exported vars
source $EXT_DIR/save_vars.sh
if [ $PIPE_SCR_RESULT -ne 0 ]; then
    exit $PIPE_SCR_RESULT
fi
[[ ${DEBUG_EXTENSION} -eq 1 ]] && set +x
"
    }
    },
    "project": "https://github.com/Osthanes/update_service",
    "project_example": "https://github.com/Puquios/active-deploy",
    "project_contact": "taube@de.ibm.com"
}
